{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Tugas_Assigment4_Amin\\\\frontend\\\\src\\\\Pages\\\\Profil\\\\profil.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // Import dependencies\n\n// Import components\nimport TodoForm from '../../todo/TodoForm';\nimport TodoList from '../../todo/TodoList'; // Import interfaces\n\n// Import styles\nimport './styles/styles.css'; // TodoListApp component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListApp = () => {\n  _s();\n\n  const [todos, setTodos] = React.useState([]); // Creating new todo item\n\n  function handleTodoCreate(todo) {\n    // Prepare new todos state\n    const newTodosState = [...todos]; // Update new todos state\n\n    newTodosState.push(todo); // Update todos state\n\n    setTodos(newTodosState);\n  } // Update existing todo item\n\n\n  function handleTodoUpdate(event, id) {\n    // Prepare new todos state\n    const newTodosState = [...todos]; // Find correct todo item to update\n\n    newTodosState.find(todo => todo.id === id).text = event.target.value; // Update todos state\n\n    setTodos(newTodosState);\n  } // Remove existing todo item\n\n\n  function handleTodoRemove(id) {\n    // Prepare new todos state\n    const newTodosState = todos.filter(todo => todo.id !== id); // Update todos state\n\n    setTodos(newTodosState);\n  } // Check existing todo item as completed\n\n\n  function handleTodoComplete(id) {\n    // Copy current todos state\n    const newTodosState = [...todos]; // Find the correct todo item and update its 'isCompleted' key\n\n    newTodosState.find(todo => todo.id === id).isCompleted = !newTodosState.find(todo => todo.id === id).isCompleted; // Update todos state\n\n    setTodos(newTodosState);\n  } // Check if todo item has title\n\n\n  function handleTodoBlur(event) {\n    if (event.target.value.length === 0) {\n      event.target.classList.add('todo-input-error');\n    } else {\n      event.target.classList.remove('todo-input-error');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list-app\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      todos: todos,\n      handleTodoCreate: handleTodoCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      handleTodoUpdate: handleTodoUpdate,\n      handleTodoRemove: handleTodoRemove,\n      handleTodoComplete: handleTodoComplete,\n      handleTodoBlur: handleTodoBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoListApp, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoListApp;\nexport default Profil;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListApp\");","map":{"version":3,"names":["React","TodoForm","TodoList","TodoListApp","todos","setTodos","useState","handleTodoCreate","todo","newTodosState","push","handleTodoUpdate","event","id","find","text","target","value","handleTodoRemove","filter","handleTodoComplete","isCompleted","handleTodoBlur","length","classList","add","remove","Profil"],"sources":["C:/Users/PC/Desktop/Tugas_Assigment4_Amin/frontend/src/Pages/Profil/profil.tsx"],"sourcesContent":["import React from 'react'\r\n// Import dependencies\r\nimport { render } from 'react-dom'\r\n\r\n// Import components\r\nimport TodoForm from '../../todo/TodoForm'\r\nimport TodoList from '../../todo/TodoList'\r\n\r\n// Import interfaces\r\nimport { TodoInterface } from '../../interface'\r\n\r\n// Import styles\r\nimport './styles/styles.css'\r\n\r\n// TodoListApp component\r\nconst TodoListApp = () => {\r\n  const [todos, setTodos] = React.useState<TodoInterface[]>([])\r\n\r\n  // Creating new todo item\r\n  function handleTodoCreate(todo: TodoInterface) {\r\n    // Prepare new todos state\r\n    const newTodosState: TodoInterface[] = [...todos]\r\n\r\n    // Update new todos state\r\n    newTodosState.push(todo)\r\n\r\n    // Update todos state\r\n    setTodos(newTodosState)\r\n  }\r\n\r\n  // Update existing todo item\r\n  function handleTodoUpdate(event: React.ChangeEvent<HTMLInputElement>, id: string) {\r\n    // Prepare new todos state\r\n    const newTodosState: TodoInterface[] = [...todos]\r\n\r\n    // Find correct todo item to update\r\n    newTodosState.find((todo: TodoInterface) => todo.id === id)!.text = event.target.value\r\n\r\n    // Update todos state\r\n    setTodos(newTodosState)\r\n  }\r\n\r\n  // Remove existing todo item\r\n  function handleTodoRemove(id: string) {\r\n    // Prepare new todos state\r\n    const newTodosState: TodoInterface[] = todos.filter((todo: TodoInterface) => todo.id !== id)\r\n\r\n    // Update todos state\r\n    setTodos(newTodosState)\r\n  }\r\n\r\n  // Check existing todo item as completed\r\n  function handleTodoComplete(id: string) {\r\n    // Copy current todos state\r\n    const newTodosState: TodoInterface[] = [...todos]\r\n\r\n    // Find the correct todo item and update its 'isCompleted' key\r\n    newTodosState.find((todo: TodoInterface) => todo.id === id)!.isCompleted = !newTodosState.find((todo: TodoInterface) => todo.id === id)!.isCompleted\r\n\r\n    // Update todos state\r\n    setTodos(newTodosState)\r\n  }\r\n\r\n  // Check if todo item has title\r\n  function handleTodoBlur(event: React.ChangeEvent<HTMLInputElement>) {\r\n    if (event.target.value.length === 0) {\r\n      event.target.classList.add('todo-input-error')\r\n    } else {\r\n      event.target.classList.remove('todo-input-error')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-list-app\">\r\n      <TodoForm\r\n        todos={todos}\r\n        handleTodoCreate={handleTodoCreate}\r\n      />\r\n\r\n      <TodoList\r\n        todos={todos}\r\n        handleTodoUpdate={handleTodoUpdate}\r\n        handleTodoRemove={handleTodoRemove}\r\n        handleTodoComplete={handleTodoComplete}\r\n        handleTodoBlur={handleTodoBlur}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profil;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAGA;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;;AAGA;AACA,OAAO,qBAAP,C,CAEA;;;;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAgC,EAAhC,CAA1B,CADwB,CAGxB;;EACA,SAASC,gBAAT,CAA0BC,IAA1B,EAA+C;IAC7C;IACA,MAAMC,aAA8B,GAAG,CAAC,GAAGL,KAAJ,CAAvC,CAF6C,CAI7C;;IACAK,aAAa,CAACC,IAAd,CAAmBF,IAAnB,EAL6C,CAO7C;;IACAH,QAAQ,CAACI,aAAD,CAAR;EACD,CAbuB,CAexB;;;EACA,SAASE,gBAAT,CAA0BC,KAA1B,EAAsEC,EAAtE,EAAkF;IAChF;IACA,MAAMJ,aAA8B,GAAG,CAAC,GAAGL,KAAJ,CAAvC,CAFgF,CAIhF;;IACAK,aAAa,CAACK,IAAd,CAAoBN,IAAD,IAAyBA,IAAI,CAACK,EAAL,KAAYA,EAAxD,EAA6DE,IAA7D,GAAoEH,KAAK,CAACI,MAAN,CAAaC,KAAjF,CALgF,CAOhF;;IACAZ,QAAQ,CAACI,aAAD,CAAR;EACD,CAzBuB,CA2BxB;;;EACA,SAASS,gBAAT,CAA0BL,EAA1B,EAAsC;IACpC;IACA,MAAMJ,aAA8B,GAAGL,KAAK,CAACe,MAAN,CAAcX,IAAD,IAAyBA,IAAI,CAACK,EAAL,KAAYA,EAAlD,CAAvC,CAFoC,CAIpC;;IACAR,QAAQ,CAACI,aAAD,CAAR;EACD,CAlCuB,CAoCxB;;;EACA,SAASW,kBAAT,CAA4BP,EAA5B,EAAwC;IACtC;IACA,MAAMJ,aAA8B,GAAG,CAAC,GAAGL,KAAJ,CAAvC,CAFsC,CAItC;;IACAK,aAAa,CAACK,IAAd,CAAoBN,IAAD,IAAyBA,IAAI,CAACK,EAAL,KAAYA,EAAxD,EAA6DQ,WAA7D,GAA2E,CAACZ,aAAa,CAACK,IAAd,CAAoBN,IAAD,IAAyBA,IAAI,CAACK,EAAL,KAAYA,EAAxD,EAA6DQ,WAAzI,CALsC,CAOtC;;IACAhB,QAAQ,CAACI,aAAD,CAAR;EACD,CA9CuB,CAgDxB;;;EACA,SAASa,cAAT,CAAwBV,KAAxB,EAAoE;IAClE,IAAIA,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmBM,MAAnB,KAA8B,CAAlC,EAAqC;MACnCX,KAAK,CAACI,MAAN,CAAaQ,SAAb,CAAuBC,GAAvB,CAA2B,kBAA3B;IACD,CAFD,MAEO;MACLb,KAAK,CAACI,MAAN,CAAaQ,SAAb,CAAuBE,MAAvB,CAA8B,kBAA9B;IACD;EACF;;EAED,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA,wBACE,QAAC,QAAD;MACE,KAAK,EAAEtB,KADT;MAEE,gBAAgB,EAAEG;IAFpB;MAAA;MAAA;MAAA;IAAA,QADF,eAME,QAAC,QAAD;MACE,KAAK,EAAEH,KADT;MAEE,gBAAgB,EAAEO,gBAFpB;MAGE,gBAAgB,EAAEO,gBAHpB;MAIE,kBAAkB,EAAEE,kBAJtB;MAKE,cAAc,EAAEE;IALlB;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAzED;;GAAMnB,W;;KAAAA,W;AA2EN,eAAewB,MAAf"},"metadata":{},"sourceType":"module"}