{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Tugas_Assigment4_Amin\\\\frontend\\\\src\\\\todo\\\\TodoForm\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport shortid from 'shortid'; // Import interfaces\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Todo form component\nconst TodoForm = props => {\n  _s();\n\n  // Create ref for form input\n  const inputRef = React.useRef(null); // Create form state\n\n  const [formState, setFormState] = React.useState(''); // Handle todo input change\n\n  function handleInputChange(event) {\n    // Update form state with the text from input\n    setFormState(event.target.value);\n  } // Handle 'Enter' in todo input\n\n\n  function handleInputEnter(event) {\n    // Check for 'Enter' key\n    if (event.key === 'Enter') {\n      // Prepare new todo object\n      const newTodo = {\n        id: shortid.generate(),\n        text: formState,\n        isCompleted: false\n      }; // Create new todo item\n\n      props.handleTodoCreate(newTodo); // Reset the input field\n\n      if (inputRef && inputRef.current) {\n        inputRef.current.value = '';\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-form\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      placeholder: \"Enter new todo\",\n      onChange: event => handleInputChange(event),\n      onKeyPress: event => handleInputEnter(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoForm, \"Lf0yggn8IM3axCKieI02T+C9DXk=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","shortid","TodoForm","props","inputRef","useRef","formState","setFormState","useState","handleInputChange","event","target","value","handleInputEnter","key","newTodo","id","generate","text","isCompleted","handleTodoCreate","current"],"sources":["C:/Users/PC/Desktop/Tugas_Assigment4_Amin/frontend/src/todo/TodoForm/index.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nimport shortid from 'shortid'\r\n\r\n// Import interfaces\r\nimport {TodoInterface, TodoFormInterface} from './../../interface'\r\n\r\n// Todo form component\r\nconst TodoForm = (props: TodoFormInterface) => {\r\n  // Create ref for form input\r\n  const inputRef = React.useRef<HTMLInputElement>(null)\r\n\r\n  // Create form state\r\n  const [formState, setFormState] = React.useState('')\r\n\r\n  // Handle todo input change\r\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    // Update form state with the text from input\r\n    setFormState(event.target.value)\r\n  }\r\n\r\n  // Handle 'Enter' in todo input\r\n  function handleInputEnter(event: React.KeyboardEvent) {\r\n    // Check for 'Enter' key\r\n    if (event.key === 'Enter') {\r\n      // Prepare new todo object\r\n      const newTodo: TodoInterface = {\r\n        id: shortid.generate(),\r\n        text: formState,\r\n        isCompleted: false\r\n      }\r\n\r\n      // Create new todo item\r\n      props.handleTodoCreate(newTodo)\r\n\r\n      // Reset the input field\r\n      if (inputRef && inputRef.current) {\r\n        inputRef.current.value = ''\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-form\">\r\n      <input\r\n        ref={inputRef}\r\n        type=\"text\"\r\n        placeholder='Enter new todo'\r\n        onChange={event => handleInputChange(event)}\r\n        onKeyPress={event => handleInputEnter(event)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default TodoForm\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,SAApB,C,CAEA;;;;AAGA;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAA8B;EAAA;;EAC7C;EACA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAA+B,IAA/B,CAAjB,CAF6C,CAI7C;;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAlC,CAL6C,CAO7C;;EACA,SAASC,iBAAT,CAA2BC,KAA3B,EAAuE;IACrE;IACAH,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;EACD,CAX4C,CAa7C;;;EACA,SAASC,gBAAT,CAA0BH,KAA1B,EAAsD;IACpD;IACA,IAAIA,KAAK,CAACI,GAAN,KAAc,OAAlB,EAA2B;MACzB;MACA,MAAMC,OAAsB,GAAG;QAC7BC,EAAE,EAAEf,OAAO,CAACgB,QAAR,EADyB;QAE7BC,IAAI,EAAEZ,SAFuB;QAG7Ba,WAAW,EAAE;MAHgB,CAA/B,CAFyB,CAQzB;;MACAhB,KAAK,CAACiB,gBAAN,CAAuBL,OAAvB,EATyB,CAWzB;;MACA,IAAIX,QAAQ,IAAIA,QAAQ,CAACiB,OAAzB,EAAkC;QAChCjB,QAAQ,CAACiB,OAAT,CAAiBT,KAAjB,GAAyB,EAAzB;MACD;IACF;EACF;;EAED,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACE;MACE,GAAG,EAAER,QADP;MAEE,IAAI,EAAC,MAFP;MAGE,WAAW,EAAC,gBAHd;MAIE,QAAQ,EAAEM,KAAK,IAAID,iBAAiB,CAACC,KAAD,CAJtC;MAKE,UAAU,EAAEA,KAAK,IAAIG,gBAAgB,CAACH,KAAD;IALvC;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA7CD;;GAAMR,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}